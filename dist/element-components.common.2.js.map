{"version":3,"sources":["webpack://element-components/./packages/vendor/Export2Excel.js"],"names":["out","rows","table","ranges","R","outRow","row","columns","C","cell","colspan","rowspan","cellValue","range","i","s","r","c","length","e","k","v","epoch","Date","ws","data","cell_ref","XLSX","datenum","buf","view","theTable","document","oo","generateArray","ws_name","wb","sheet_from_array_of_arrays","wbout","bookType","bookSST","type","saveAs","s2ab","multiHeader","header","filename","merges","autoWidth","colWidth","val","result","j"],"mappings":"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","file":"element-components.common.2.js","sourcesContent":["/* eslint-disable */\r\nimport { saveAs } from 'file-saver'\r\nimport XLSX from 'xlsx'\r\n\r\nfunction generateArray(table) {\r\n  var out = [];\r\n  var rows = table.querySelectorAll('tr');\r\n  var ranges = [];\r\n  for (var R = 0; R < rows.length; ++R) {\r\n    var outRow = [];\r\n    var row = rows[R];\r\n    var columns = row.querySelectorAll('td');\r\n    for (var C = 0; C < columns.length; ++C) {\r\n      var cell = columns[C];\r\n      var colspan = cell.getAttribute('colspan');\r\n      var rowspan = cell.getAttribute('rowspan');\r\n      var cellValue = cell.innerText;\r\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\r\n\r\n      //Skip ranges\r\n      ranges.forEach(function (range) {\r\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\r\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\r\n        }\r\n      });\r\n\r\n      //Handle Row Span\r\n      if (rowspan || colspan) {\r\n        rowspan = rowspan || 1;\r\n        colspan = colspan || 1;\r\n        ranges.push({\r\n          s: {\r\n            r: R,\r\n            c: outRow.length\r\n          },\r\n          e: {\r\n            r: R + rowspan - 1,\r\n            c: outRow.length + colspan - 1\r\n          }\r\n        });\r\n      };\r\n\r\n      //Handle Value\r\n      outRow.push(cellValue !== \"\" ? cellValue : null);\r\n\r\n      //Handle Colspan\r\n      if (colspan)\r\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\r\n    }\r\n    out.push(outRow);\r\n  }\r\n  return [out, ranges];\r\n};\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462;\r\n  var epoch = Date.parse(v);\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, opts) {\r\n  var ws = {};\r\n  var range = {\r\n    s: {\r\n      c: 10000000,\r\n      r: 10000000\r\n    },\r\n    e: {\r\n      c: 0,\r\n      r: 0\r\n    }\r\n  };\r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R;\r\n      if (range.s.c > C) range.s.c = C;\r\n      if (range.e.r < R) range.e.r = R;\r\n      if (range.e.c < C) range.e.c = C;\r\n      var cell = {\r\n        v: data[R][C]\r\n      };\r\n      if (cell.v == null) continue;\r\n      var cell_ref = XLSX.utils.encode_cell({\r\n        c: C,\r\n        r: R\r\n      });\r\n\r\n      if (typeof cell.v === 'number') cell.t = 'n';\r\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = 'n';\r\n        cell.z = XLSX.SSF._table[14];\r\n        cell.v = datenum(cell.v);\r\n      } else cell.t = 's';\r\n\r\n      ws[cell_ref] = cell;\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\r\n  return ws;\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook();\r\n  this.SheetNames = [];\r\n  this.Sheets = {};\r\n}\r\n\r\nfunction s2ab(s) {\r\n  var buf = new ArrayBuffer(s.length);\r\n  var view = new Uint8Array(buf);\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n  return buf;\r\n}\r\n\r\nexport function export_table_to_excel(id) {\r\n  var theTable = document.getElementById(id);\r\n  var oo = generateArray(theTable);\r\n  var ranges = oo[1];\r\n\r\n  /* original data */\r\n  var data = oo[0];\r\n  var ws_name = \"SheetJS\";\r\n\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add ranges to worksheet */\r\n  // ws['!cols'] = ['apple', 'banan'];\r\n  ws['!merges'] = ranges;\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: 'xlsx',\r\n    bookSST: false,\r\n    type: 'binary'\r\n  });\r\n\r\n  saveAs(new Blob([s2ab(wbout)], {\r\n    type: \"application/octet-stream\"\r\n  }), \"test.xlsx\")\r\n}\r\n\r\nexport function export_json_to_excel({\r\n  multiHeader = [],\r\n  header,\r\n  data,\r\n  filename,\r\n  merges = [],\r\n  autoWidth = true,\r\n  bookType = 'xlsx'\r\n} = {}) {\r\n  /* original data */\r\n  filename = filename || 'excel-list'\r\n  data = [...data]\r\n  data.unshift(header);\r\n\r\n  for (let i = multiHeader.length - 1; i > -1; i--) {\r\n    data.unshift(multiHeader[i])\r\n  }\r\n\r\n  var ws_name = \"SheetJS\";\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  if (merges.length > 0) {\r\n    if (!ws['!merges']) ws['!merges'] = [];\r\n    merges.forEach(item => {\r\n      ws['!merges'].push(XLSX.utils.decode_range(item))\r\n    })\r\n  }\r\n\r\n  if (autoWidth) {\r\n    /*设置worksheet每列的最大宽度*/\r\n    const colWidth = data.map(row => row.map(val => {\r\n      /*先判断是否为null/undefined*/\r\n      if (val == null) {\r\n        return {\r\n          'wch': 10\r\n        };\r\n      }\r\n      /*再判断是否为中文*/\r\n      else if (val.toString().charCodeAt(0) > 255) {\r\n        return {\r\n          'wch': val.toString().length * 2\r\n        };\r\n      } else {\r\n        return {\r\n          'wch': val.toString().length\r\n        };\r\n      }\r\n    }))\r\n    /*以第一行为初始值*/\r\n    let result = colWidth[0];\r\n    for (let i = 1; i < colWidth.length; i++) {\r\n      for (let j = 0; j < colWidth[i].length; j++) {\r\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\r\n          result[j]['wch'] = colWidth[i][j]['wch'];\r\n        }\r\n      }\r\n    }\r\n    ws['!cols'] = result;\r\n  }\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: bookType,\r\n    bookSST: false,\r\n    type: 'binary'\r\n  });\r\n  saveAs(new Blob([s2ab(wbout)], {\r\n    type: \"application/octet-stream\"\r\n  }), `${filename}.${bookType}`);\r\n}\r\n"],"sourceRoot":""}